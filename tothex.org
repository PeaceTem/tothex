server {
	listen 80;
	server_name tothex.org www.tothex.org;
	
	location /static/ {
		alias /opt/tothex/static/;
	}

	location / {
		#root /opt/tothex/;
		proxy_pass http://localhost:8000/quiz/;

	}
}



sudo tail -f /var/log/nginx/error.log

After linux tutorials 
use postgres for search in django.[Saturday]
And Vim tutorials [today or tomorrow]
verify zoho mail

pip install flask flask-script flask-bootstrap flask-moment flask-wtf flask-sqlalchemy flask-migrate flask-mail 

use the available categories to generate quizzes and questions to the user

------------------[DONE-TODAY]write the about page
[DONE-TODAY]do some basic flask
verify zoho mail
learn async view in django view and learn how it works

searches should be shown in another page[AP]

use multiple database
add allauth view
add environment variable to nginx
paystack verification

learn how to use zoho mail with django

add proxy_pass / to /question/[Today]

buy a new glo sim and use the remaining 500 to buy a one week plan to it.



Try to add a subdomain to your app
	use blog.neugott.com  like the www own, and attach a new ip to it






Design your app like instragam [AP]
if user is authenticate add the home page link to the sign up page




 listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/neugott.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/neugott.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}

server {
    if ($host = www.neugott.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = neugott.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen      80;
    server_name neugott.com www.neugott.com;
    return 404; # managed by Certbot




}

sudo apt-get install certbot python3-certbot-nginx
sudo certbot certonly --nginx
sudo certbot install --nginx





  proxy_pass http://django:8000;

certbot renew   or certbot again    to renew let encrypt


https://pubdash.ezoic.com/setup


sudo passwd postgres   , to change the password of postgres user
sudo passwd ubuntu     , to change teh password of ubuntu user;


su - postgres     , to switch to postgres user;
su - ubumtu      ,  to switch to ubuntu user;

$("#postcontent").submit(function(e) {
    $.ajax({
        type:"POST",
        url:"add_new_post.php",
        data:$("#postcontent").serialize(),
        beforeSend:function(){
            $(".post_submitting").show().html("<center><img src='images/loading.gif'/></center>");
        },success:function(response){   
            //alert(response);
            $("#return_update_msg").html(response); 
            $(".post_submitting").fadeOut(1000);                
        }
    });
});


The new postgres role is NeuGott.


self.addEventListener("install", event => {
    this.skipWaiting();
    event.waitUntil(
        caches.open(staticCacheName)
            .then(cache => {
        return fetch('/offline')
        .then(response => cache.put('/offline', new Response(response.body)));
            })
    )
});


sudo usermod -aG sudo newuser,  to add a user to sudoers.
sudo apt-get install dpkg
dpkg --status postgresql
whereis postgresql
which psql
ll /usr/bin/psql



Initialize the server by running the command:

sudo service postgresql-9.3 initdb
Start the server by running the command:

sudo service postgresql-9.3 start








# systemd service for managing all PostgreSQL clusters on the system. This
# service is actually a systemd target, but we are using a service since
# targets cannot be reloaded.

[Unit]
Description=PostgreSQL RDBMS

[Service]
Type=oneshot  # change this part to notify
ExecStart=/bin/true
ExecReload=/bin/true
RemainAfterExit=on

[Install]
WantedBy=multi-user.target

The pg_ctl is located in /usr/lib/postgresql/12/bin/pg_ctl

Warning: The unit file, source configuration file or drop-ins of postgresql.service changed on disk. Run 'systemctl daemon-reload' to reload units.
python manage.py collectstatic --noinput --clear