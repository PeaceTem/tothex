<script type="text/javascript">
    window.onbeforeunload = function() {
        return "Dude, are you sure you want to leave? Think of the kittens!";
    }
</script>

the above block of code is to prevent page refresh with javascript


class YourAppConfig(AppConfig):
    def ready(self):
        # avoid double execution by checking 'autoreload' variable

        if environ.get('RUN_MAIN', None) == 'true':
            return

        from .scheduler import Scheduler

        # scheduler will execute task every 10 seconds
        thread = Thread(
            daemon=True,
            target=Scheduler(10).run
        )

        thread.start()




        And scheduler.py, uses sched from the standard library:

from sched import scheduler

class Scheduler:
    def __init__(self, delay: int):
        self.delay = delay
        self.scheduler = scheduler()

    def run(self) -> None:
        while True:
            self.scheduler.enter(self.delay, 1, <some function>)
            self.scheduler.run()






Pushing to github

git init
git add -A
git commit -m 'Added my project'
git remote add origin git@github.com:sammy/my-new-project.git
git push -u -f origin master










ssh -i Lightsail-default-key.pem ubuntu@18.132.98.137
ssh -i Lightsail-default-key.pem ubuntu@18.169.5.25




ssh -i LightsailDefaultKey-eu-west-2.pem ubuntu@18.169.5.25



upstream django {
    server unix:///home/ubuntu/tothex/tothex.sock;
}
# configuration of the server
server {
    listen      80;
    server_name www.neugott.com neugott.com 13.41.220.184;
    charset     utf-8;
    # max upload size
    client_max_body_size 75M;
    # Django media and static files
    location /media  {
        alias /home/ubuntu/tothex/media;
    }
    location /static {
        alias /home/ubuntu/tothex/staticfiles;
    }
    # Send all non-media requests to the Django server.

    location / {
        uwsgi_pass  django;
        include     /home/ubuntu/tothex/uwsgi_params;
    }
}

172.26.15.102









This is the list of topics i want to cover

-linux operating system
-advance javascript
-advance python
-django rest framework
-react js
-Next js
-uWSGI
-flask
-php
-laravel
-XSS and start little ones from your localhost and your main website
-CSRF
-Chart Js
-Vim
-Payment Gateway in django with paypal paystack stripe cryptocurrency payment coinbase commerce (Numpy, Pandas, Matplotlib, Jupyter NoteBook)
-Ansible
-Docker
-Docker Compose
-Nginx
-Apache
-postgres
-Node js
-Express js
-Bug Bounty
-SVG and CANVAS for your website
-learn windows operating system (USER, system32, )
-Django Testing with Pytest, Selenium, and Sentry







# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name _;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
        }

        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        #}
  


















  [Unit]
Description=uwsgi emperor for NeuGott website
After=network.target
[Service]
User=ubuntu
Restart=always
ExecStart=/home/ubuntu/env/md/bin/uwsgi --emperor /home/ubuntu/env/md/vassals --uid www-data --gid www-data
[Install]
WantedBy=multi-user.target





[Unit]
Description=uwsgi emperor for neugott website
After=network.target
[Service]
User=ubuntu
Restart=always
ExecStart=/home/ubuntu/tothex/tothexvenv/bin/uwsgi --emperor /home/ubuntu/tothex/tothexvenv/vassals --uid www-data --gid www-data
[Install]
WantedBy=multi-user.target







django-insecure-4byeclyh#89lkfsjq(sj38vi2siitfd2v8d-8l61(4x3m045zj'


To generate ssh keys
ssh-keygen -o -t rsa -C “ssh@github.com”

nginx logs
/var/log/nginx/access. log